"""initial

Revision ID: 2f63bfe5a567
Revises: 
Create Date: 2025-05-30 15:51:43.179356

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2f63bfe5a567'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('faculties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('birthday', sa.DateTime(), nullable=True),
    sa.Column('profile_picture', sa.String(length=255), nullable=True),
    sa.Column('is_student', sa.Boolean(), nullable=True),
    sa.Column('is_teacher', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('study_programs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculties.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('teacher_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('faculty_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculties.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('admission_year', sa.Integer(), nullable=False),
    sa.Column('group_letter', sa.String(length=1), nullable=False),
    sa.Column('study_program_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['study_program_id'], ['study_programs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('modules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('credits', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.Enum('pirmadienis', 'antradienis', 'trečiadienis', 'ketvirtadienis', 'penktadienis'), nullable=False),
    sa.Column('semester', sa.Enum('rudens', 'pavasario'), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('room', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('study_program_id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['study_program_id'], ['study_programs.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher_info.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=False),
    sa.Column('assessment_type', sa.Enum('egzaminas', 'uzduotis', 'testas', 'laboratorinis'), nullable=False),
    sa.Column('max_points', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('created_by_teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_teacher_id'], ['teacher_info.id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('module_prerequisites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('prerequisite_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.ForeignKeyConstraint(['prerequisite_id'], ['modules.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('module_id', 'prerequisite_id', name='unique_prerequisite')
    )
    op.create_table('student_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('admission_year', sa.Integer(), nullable=False),
    sa.Column('current_semester', sa.Integer(), nullable=True),
    sa.Column('completed_credits', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('study_program_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['study_program_id'], ['study_programs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessment_submissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('grade', sa.Integer(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('graded_by_teacher_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('grade >= 0', name='non_negative_grade'),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessments.id'], ),
    sa.ForeignKeyConstraint(['graded_by_teacher_id'], ['teacher_info.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('assessment_id', 'student_id', name='unique_submission_per_student')
    )
    op.create_table('module_enrollments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_info_id', sa.Integer(), nullable=True),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('enrollment_date', sa.DateTime(), nullable=True),
    sa.Column('semester', sa.Enum('rudens', 'pavasario'), nullable=True),
    sa.Column('status', sa.Enum('active', 'completed', 'failed', 'dropped'), nullable=True),
    sa.Column('final_grade', sa.Integer(), nullable=True),
    sa.Column('completion_date', sa.DateTime(), nullable=True),
    sa.CheckConstraint('final_grade >= 1 AND final_grade <= 10', name='valid_grade_range'),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.ForeignKeyConstraint(['student_info_id'], ['student_info.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_info_id', 'module_id', name='unique_student_module')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('module_enrollments')
    op.drop_table('assessment_submissions')
    op.drop_table('student_info')
    op.drop_table('module_prerequisites')
    op.drop_table('assessments')
    op.drop_table('modules')
    op.drop_table('groups')
    op.drop_table('teacher_info')
    op.drop_table('study_programs')
    op.drop_table('users')
    op.drop_table('faculties')
    # ### end Alembic commands ###
